{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/manav/Documents/in28Minutes/todo-app/src/Component/todo/LoginComponent.jsx\";\nimport React, { Component } from \"react\";\nimport AuthenticationService from \"./AuthenticationService.js\";\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: 'in28minutes',\n      password: '',\n      showSuccessMessage: false,\n      hasLoginFailed: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    console.log(this.state);\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    /*\n    if (this.state.username === \"in28minutes\" && this.state.password === \"dummy\") {\n        AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password)\n        this.props.history.push(`/Welcome/${this.state.username}`)\n        console.log(\"Successful\")\n    } else {\n        console.log(\"Failed\")\n        this.setState({showSuccessMessage: false, hasLoginFailed: true})\n    }*/\n    AuthenticationService.executeBasicAuthenticationService(this.state.username, this.state.password).then(() => {\n      AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n      this.props.history.push(`/Welcome/${this.state.username}`);\n    }).catch(() => {\n      console.log(\"Failed\");\n      this.setState({\n        showSuccessMessage: false,\n        hasLoginFailed: true\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [this.state.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning\",\n          children: \" invalid Credentials \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 51\n        }, this), this.state.showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" Successful Login \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), \"User Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: this.state.username,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 32\n        }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: this.loginClicked,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["/Users/manav/Documents/in28Minutes/todo-app/src/Component/todo/LoginComponent.jsx"],"names":["React","Component","AuthenticationService","LoginComponent","constructor","props","state","username","password","showSuccessMessage","hasLoginFailed","handleChange","bind","loginClicked","event","console","log","setState","target","name","value","executeBasicAuthenticationService","then","registerSuccessfulLogin","history","push","catch","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;;AAEA,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AACnCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,aADD;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,kBAAkB,EAAE,KAHX;AAITC,MAAAA,cAAc,EAAE;AAJP,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB;AACA,SAAKW,QAAL,CAAc;AAAC,OAACH,KAAK,CAACI,MAAN,CAAaC,IAAd,GAAqBL,KAAK,CAACI,MAAN,CAAaE;AAAnC,KAAd;AACH;;AAEDP,EAAAA,YAAY,GAAG;AACX;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACSX,IAAAA,qBAAqB,CAACmB,iCAAtB,CAAwD,KAAKf,KAAL,CAAWC,QAAnE,EAA6E,KAAKD,KAAL,CAAWE,QAAxF,EACIc,IADJ,CACS,MAAM;AACJpB,MAAAA,qBAAqB,CAACqB,uBAAtB,CAA8C,KAAKjB,KAAL,CAAWC,QAAzD,EAAmE,KAAKD,KAAL,CAAWE,QAA9E;AACA,WAAKH,KAAL,CAAWmB,OAAX,CAAmBC,IAAnB,CAAyB,YAAW,KAAKnB,KAAL,CAAWC,QAAS,EAAxD;AAA4D,KAHvE,EAIImB,KAJJ,CAIU,MAAM;AACLX,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,WAAKC,QAAL,CAAc;AAACR,QAAAA,kBAAkB,EAAE,KAArB;AAA4BC,QAAAA,cAAc,EAAE;AAA5C,OAAd;AAAiE,KAN5E;AASJ;;AAEDiB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,mBACK,KAAKrB,KAAL,CAAWI,cAAX,iBAA6B;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADlC,EAEK,KAAKJ,KAAL,CAAWG,kBAAX,iBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFtC,eAGI;AAAA;AAAA;AAAA;AAAA,gBAHJ,8BAIe;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,UAAxB;AAAmC,UAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,QAArD;AACO,UAAA,QAAQ,EAAE,KAAKI;AADtB;AAAA;AAAA;AAAA;AAAA,gBAJf,6BAMc;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,UAAxB;AAAmC,UAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,QAArD;AACO,UAAA,QAAQ,EAAE,KAAKG;AADtB;AAAA;AAAA;AAAA;AAAA,gBANd,eAQI;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAE,KAAKE,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AAvDkC;;AA0DvC,eAAeV,cAAf","sourcesContent":["import React, {Component} from \"react\";\nimport AuthenticationService from \"./AuthenticationService.js\"\n\nclass LoginComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: 'in28minutes',\n            password: '',\n            showSuccessMessage: false,\n            hasLoginFailed: false\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange(event) {\n        console.log(this.state)\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    loginClicked() {\n        /*\n        if (this.state.username === \"in28minutes\" && this.state.password === \"dummy\") {\n            AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password)\n            this.props.history.push(`/Welcome/${this.state.username}`)\n            console.log(\"Successful\")\n        } else {\n            console.log(\"Failed\")\n            this.setState({showSuccessMessage: false, hasLoginFailed: true})\n        }*/\n         AuthenticationService.executeBasicAuthenticationService(this.state.username, this.state.password)\n            .then(() => {\n                    AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password)\n                    this.props.history.push(`/Welcome/${this.state.username}`) } )\n            .catch(() => {\n                    console.log(\"Failed\")\n                    this.setState({showSuccessMessage: false, hasLoginFailed: true})}\n            )\n        \n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Login</h1>\n                <div className=\"container\">\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\"> invalid Credentials </div>}\n                    {this.state.showSuccessMessage && <div> Successful Login </div>}\n                    <br/>\n                    User Name: <input type=\"text\" name=\"username\" value={this.state.username}\n                                      onChange={this.handleChange}/>\n                    Password: <input type=\"text\" name=\"password\" value={this.state.password}\n                                     onChange={this.handleChange}/>\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LoginComponent"]},"metadata":{},"sourceType":"module"}