{"ast":null,"code":"import axios from 'axios';\n\nclass TodoDataService {\n  retriveAllTodos(name) {\n    /*  let username = 'in28Minutes'\n      let password = 'dummy'\n      let basicAuthHeader = 'Basic ' + window.btoa(username + \":\" + password)\n      return axios.get(`http://localhost:8080/users/${name}/todos`,\n          { headers: { authorization: basicAuthHeader }});*/\n    return axios.get(`http://localhost:8080/users/${name}/todos`);\n  }\n\n  retriveTodo(name, id) {\n    return axios.get(`http://localhost:8080/users/${name}/todos/${id}`);\n  }\n\n  deleteTodo(name, id) {\n    return axios.delete(`http://localhost:8080/users/${name}/todos/${id}`);\n  }\n\n  updateTodo(name, id, todo) {\n    return axios.put(`http://localhost:8080/users/${name}/todos/${id}`, todo);\n  }\n\n  createTodo(name, todo) {\n    return axios.post(`http://localhost:8080/users/${name}/todos/`, todo);\n  }\n\n}\n\nexport default new TodoDataService();","map":{"version":3,"sources":["/Users/manav/Documents/in28Minutes/todo-app/src/api/todo/TodoDataService.js"],"names":["axios","TodoDataService","retriveAllTodos","name","get","retriveTodo","id","deleteTodo","delete","updateTodo","todo","put","createTodo","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAN,CAAsB;AAElBC,EAAAA,eAAe,CAACC,IAAD,EAAO;AACpB;AACN;AACA;AACA;AACA;AAEQ,WAAOH,KAAK,CAACI,GAAN,CAAW,+BAA8BD,IAAK,QAA9C,CAAP;AACH;;AAEDE,EAAAA,WAAW,CAACF,IAAD,EAAOG,EAAP,EAAW;AAClB,WAAON,KAAK,CAACI,GAAN,CAAW,+BAA8BD,IAAK,UAASG,EAAG,EAA1D,CAAP;AACH;;AAEDC,EAAAA,UAAU,CAACJ,IAAD,EAAOG,EAAP,EAAW;AACjB,WAAON,KAAK,CAACQ,MAAN,CAAc,+BAA8BL,IAAK,UAASG,EAAG,EAA7D,CAAP;AACH;;AAEDG,EAAAA,UAAU,CAACN,IAAD,EAAOG,EAAP,EAAWI,IAAX,EAAiB;AACvB,WAAOV,KAAK,CAACW,GAAN,CAAW,+BAA8BR,IAAK,UAASG,EAAG,EAA1D,EAA6DI,IAA7D,CAAP;AACH;;AAEDE,EAAAA,UAAU,CAACT,IAAD,EAAOO,IAAP,EAAa;AACnB,WAAOV,KAAK,CAACa,IAAN,CAAY,+BAA8BV,IAAK,SAA/C,EAAyDO,IAAzD,CAAP;AACH;;AA1BiB;;AA6BtB,eAAe,IAAIT,eAAJ,EAAf","sourcesContent":["import axios from 'axios'\n\nclass TodoDataService {\n\n    retriveAllTodos(name) {\n      /*  let username = 'in28Minutes'\n        let password = 'dummy'\n        let basicAuthHeader = 'Basic ' + window.btoa(username + \":\" + password)\n        return axios.get(`http://localhost:8080/users/${name}/todos`,\n            { headers: { authorization: basicAuthHeader }});*/\n\n        return axios.get(`http://localhost:8080/users/${name}/todos`);\n    }\n\n    retriveTodo(name, id) {\n        return axios.get(`http://localhost:8080/users/${name}/todos/${id}`);\n    }\n\n    deleteTodo(name, id) {\n        return axios.delete(`http://localhost:8080/users/${name}/todos/${id}`);\n    }\n\n    updateTodo(name, id, todo) {\n        return axios.put(`http://localhost:8080/users/${name}/todos/${id}`, todo);\n    }\n\n    createTodo(name, todo) {\n        return axios.post(`http://localhost:8080/users/${name}/todos/`, todo);\n    }\n}\n\nexport default new TodoDataService()"]},"metadata":{},"sourceType":"module"}